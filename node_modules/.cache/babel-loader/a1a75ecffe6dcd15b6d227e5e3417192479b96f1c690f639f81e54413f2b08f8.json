{"ast":null,"code":"import React,{useState}from'react';import'./styles.css';// Import the CSS file\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[messages,setMessages]=useState([{text:\"Hi! I'm Vitalyn, your AI performance coach. How can I help you today?\",sender:\"bot\"}]);const[input,setInput]=useState('');const sendMessage=async()=>{if(!input.trim())return;const userMessage={text:input,sender:\"user\"};setMessages([...messages,userMessage]);setInput('');// Replace this with real API call later\nconst botReply=await fakeBotReply(input);setMessages(prev=>[...prev,{text:botReply,sender:\"bot\"}]);};// Fake bot reply for demo\nconst fakeBotReply=message=>{return new Promise(resolve=>{setTimeout(()=>{resolve(\"This is a placeholder reply. Replace with OpenAI API call.\");},1000);});};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Vitalyn AI Chatbot\"}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-window\",children:messages.map((msg,i)=>/*#__PURE__*/_jsx(\"div\",{className:`message ${msg.sender==='user'?'user':'bot'}`,children:msg.text},i))}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-area\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:input,onChange:e=>setInput(e.target.value),onKeyDown:e=>e.key==='Enter'&&sendMessage(),placeholder:\"Type your message...\"}),/*#__PURE__*/_jsx(\"button\",{onClick:sendMessage,children:\"Send\"})]})]});}export default App;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","App","messages","setMessages","text","sender","input","setInput","sendMessage","trim","userMessage","botReply","fakeBotReply","prev","message","Promise","resolve","setTimeout","className","children","map","msg","i","type","value","onChange","e","target","onKeyDown","key","placeholder","onClick"],"sources":["/Users/michelhabre/Documents/GitHub/vitalyn-chatbot/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './styles.css'; // Import the CSS file\n\nfunction App() {\n  const [messages, setMessages] = useState([\n    { text: \"Hi! I'm Vitalyn, your AI performance coach. How can I help you today?\", sender: \"bot\" }\n  ]);\n  const [input, setInput] = useState('');\n\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n\n    const userMessage = { text: input, sender: \"user\" };\n    setMessages([...messages, userMessage]);\n    setInput('');\n\n    // Replace this with real API call later\n    const botReply = await fakeBotReply(input);\n    setMessages(prev => [...prev, { text: botReply, sender: \"bot\" }]);\n  };\n\n  // Fake bot reply for demo\n  const fakeBotReply = (message) => {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(\"This is a placeholder reply. Replace with OpenAI API call.\");\n      }, 1000);\n    });\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Vitalyn AI Chatbot</h1>\n      <div className=\"chat-window\">\n        {messages.map((msg, i) => (\n          <div\n            key={i}\n            className={`message ${msg.sender === 'user' ? 'user' : 'bot'}`}\n          >\n            {msg.text}\n          </div>\n        ))}\n      </div>\n      <div className=\"input-area\">\n        <input\n          type=\"text\"\n          value={input}\n          onChange={e => setInput(e.target.value)}\n          onKeyDown={e => e.key === 'Enter' && sendMessage()}\n          placeholder=\"Type your message...\"\n        />\n        <button onClick={sendMessage}>Send</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,cAAc,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEvB,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGP,QAAQ,CAAC,CACvC,CAAEQ,IAAI,CAAE,uEAAuE,CAAEC,MAAM,CAAE,KAAM,CAAC,CACjG,CAAC,CACF,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAEtC,KAAM,CAAAY,WAAW,CAAG,KAAAA,CAAA,GAAY,CAC9B,GAAI,CAACF,KAAK,CAACG,IAAI,CAAC,CAAC,CAAE,OAEnB,KAAM,CAAAC,WAAW,CAAG,CAAEN,IAAI,CAAEE,KAAK,CAAED,MAAM,CAAE,MAAO,CAAC,CACnDF,WAAW,CAAC,CAAC,GAAGD,QAAQ,CAAEQ,WAAW,CAAC,CAAC,CACvCH,QAAQ,CAAC,EAAE,CAAC,CAEZ;AACA,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAC,YAAY,CAACN,KAAK,CAAC,CAC1CH,WAAW,CAACU,IAAI,EAAI,CAAC,GAAGA,IAAI,CAAE,CAAET,IAAI,CAAEO,QAAQ,CAAEN,MAAM,CAAE,KAAM,CAAC,CAAC,CAAC,CACnE,CAAC,CAED;AACA,KAAM,CAAAO,YAAY,CAAIE,OAAO,EAAK,CAChC,MAAO,IAAI,CAAAC,OAAO,CAACC,OAAO,EAAI,CAC5BC,UAAU,CAAC,IAAM,CACfD,OAAO,CAAC,4DAA4D,CAAC,CACvE,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CAAC,CACJ,CAAC,CAED,mBACEhB,KAAA,QAAKkB,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBrB,IAAA,OAAAqB,QAAA,CAAI,oBAAkB,CAAI,CAAC,cAC3BrB,IAAA,QAAKoB,SAAS,CAAC,aAAa,CAAAC,QAAA,CACzBjB,QAAQ,CAACkB,GAAG,CAAC,CAACC,GAAG,CAAEC,CAAC,gBACnBxB,IAAA,QAEEoB,SAAS,CAAE,WAAWG,GAAG,CAAChB,MAAM,GAAK,MAAM,CAAG,MAAM,CAAG,KAAK,EAAG,CAAAc,QAAA,CAE9DE,GAAG,CAACjB,IAAI,EAHJkB,CAIF,CACN,CAAC,CACC,CAAC,cACNtB,KAAA,QAAKkB,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBrB,IAAA,UACEyB,IAAI,CAAC,MAAM,CACXC,KAAK,CAAElB,KAAM,CACbmB,QAAQ,CAAEC,CAAC,EAAInB,QAAQ,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CACxCI,SAAS,CAAEF,CAAC,EAAIA,CAAC,CAACG,GAAG,GAAK,OAAO,EAAIrB,WAAW,CAAC,CAAE,CACnDsB,WAAW,CAAC,sBAAsB,CACnC,CAAC,cACFhC,IAAA,WAAQiC,OAAO,CAAEvB,WAAY,CAAAW,QAAA,CAAC,MAAI,CAAQ,CAAC,EACxC,CAAC,EACH,CAAC,CAEV,CAEA,cAAe,CAAAlB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}